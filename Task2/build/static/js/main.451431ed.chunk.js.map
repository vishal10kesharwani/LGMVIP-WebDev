{"version":3,"sources":["components/SearchBox.js","components/Card.js","components/CardList.js","components/Scroll.js","components/Navigation/Navigation.js","containers/loader.js","containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchfeild","searchChange","className","type","placeholder","onChange","Card","name","email","id","lname","alt","src","CardList","robots","map","user","i","first_name","last_name","style","padding","height","color","background","Scroll","props","overflowY","border","children","Navigation","onButtonSubmit","Button","variant","onClick","LoaderComp","marginLeft","width","timeout","App","setState","isButtonClicked","timer","setTimeout","fetch","then","response","json","users","data","clearTimeout","onSearchChange","event","target","value","state","filteredRobots","this","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.451431ed.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst SearchBox=({searchfeild, searchChange})=>{\n    return(\n            <div className='pa2'>\n                <input \n                className='pa3 ba b--white bg-orange\n                '\n                 type=\"search\" \n                 placeholder='Search by name' \n                 onChange={searchChange}/>\n            </div>\n        );\n}\n\nexport default SearchBox;\n","import React from 'react';\n\nconst Card = ({ name, email, id, lname}) => {\n  //Displays all the information in a card format\n    return (\n      <div className='tc grow bg-orange br2 pa5 ma3 dib bw2 shadow-10'>\n        <img alt='robots' src={`https://reqres.in/img/faces/${id}-image.jpg`} />\n        <div>\n\t\t  <br />\n          <h2>{name} {lname}</h2>\n\t\t  <br />\n          <h3>{email}</h3>\n        </div>\n      </div>\n    );\n  }\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\nimport '../containers/styles.css';\n\n\nconst CardList = ({robots})=>{\n    return(\n            <div>\n                {\n                  //displays all the card by calling the card component and passing all the values\n                    robots.map((user, i) => {\n                        return(\n                                    <Card\n                                    key={i}\n                                    id={robots[i].id}\n                                    name={robots[i].first_name}\n                                    lname={robots[i].last_name}\n                                    email={robots[i].email}\n                                    />\n                            );\n                    })\n                }\n                <p className='copy'style={{  padding:'5px 0px',height: '30px', color: 'white',background: 'linear-gradient(89deg, #FF7600 0%, #e2f7f8 100%)' }} >by &copy; Ankita Sahu</p>\n            </div>\n        );\n}\n\nexport default CardList;\n","import React from 'react';\n\nconst Scroll = (props) => {\n    return(\n        //used to provide a scroll view\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '1200px'}}>\n            {props.children}\n        </div>\n    )\n};\n\nexport default Scroll;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport './Navbar.css';\n\nconst Navigation = ({onButtonSubmit}) => {\n\n            return(\n                //used to provide the button funtionality and displays the logo\n                <nav className='navbar'>\n                    <h3 className=\"logo\">My Clients</h3>\n                    <div className='nav-links'>\n                        <Button variant=\"contained\" onClick={onButtonSubmit} color=\"orange\">\n                            Get Users\n                        </Button>\n                    </div>\n                </nav>\n            );\n        }\n\n//{onRouteChange, isSignedIn}\nexport default Navigation;\n","import Loader from \"react-loader-spinner\";\nimport './styles.css';\n\nconst LoaderComp = ()=>{\n    return(\n        //used to display the loader when the api is fetching data\n        <div className='app'>\n            <Loader\n            type=\"TailSpin\"\n            color=\"#ED8E7C\"\n            style={{ marginLeft: '270px' }}\n            height={50}\n            width={50}\n            timeout={3000}\n            />\n       </div>\n    );\n}\nexport default LoaderComp\n","import React, {Component}  from 'react';\nimport SearchBox from '../components/SearchBox';\nimport CardList from '../components/CardList';\nimport Scroll from '../components/Scroll';\nimport Navbar from '../components/Navigation/Navigation';\nimport Loader from './loader';\n\nclass App extends Component{\n\n    constructor(){\n        super()\n        //defining the states\n        this.state={\n            robots: [],\n            searchfeild: '',\n            isButtonClicked: false\n        }\n    }\n\n    //function when the button is clicked .\n    //it fetches the api\n    //and stores in robots\n    onButtonSubmit = () => {\n        //changes the state of the button is clicked\n        this.setState({isButtonClicked: !this.isButtonClicked})\n        const timer = setTimeout(() => {\n            //fetches the api which is provided in letsgrowmore\n            fetch('https://reqres.in/api/users?page=1').then(response=> {\n            return response.json();\n            })\n            .then(users=>{\n                this.setState({robots: users.data})\n            });\n        }, 3000);\n        return () =>clearTimeout(timer);\n    }\n\n    //function used to change the searchfield\n    onSearchChange = (event) => {\n        this.setState({searchfeild: event.target.value})\n    }\n\n    render(){\n\n        //used to filter the robots bt their first name\n        const filteredRobots = this.state.robots.filter(robots=>{\n            return robots.first_name.toLowerCase().includes(this.state.searchfeild.toLowerCase());\n        })\n\n        //at the starting\n        //when the user has not clicked the button\n        //and the api is not fetched\n        if(this.state.robots.length === 0 && this.state.isButtonClicked === false){\n            return (\n              <>\n                <Navbar onButtonSubmit={this.onButtonSubmit}/>\n                <h1 className='tc'>Please click on get users to get all details</h1>\n              </>\n            );\n\n        }\n\n        //when the button is clicked and the api is being called\n        //but no data is fetched\n        else if(this.state.robots.length === 0){\n            return (\n                <>\n                  <Navbar onButtonSubmit={this.onButtonSubmit}/>\n                  <h1 className='tc'>Loading...</h1>\n                  <Loader className='loader'></Loader>\n                </>\n              );\n        }\n\n        //when the button is clicked and the api has fetched data\n        else{\n            return(\n                <>\n                  <Navbar onButtonSubmit={this.onButtonSubmit}/>\n                  <div className='tc'>\n                      <h1>Client Info</h1>\n                      <SearchBox searchChange={this.onSearchChange}/>\n                      <Scroll>\n                        <CardList robots={filteredRobots}/>\n                      </Scroll>\n\n                  </div>\n                 </>\n              );\n        }\n\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n    <App/>\n    ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}